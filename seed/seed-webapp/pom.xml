<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>com.cujojs</groupId>
		<artifactId>seed</artifactId>
		<version>0.1.0-SNAPSHOT</version>
	</parent>

	<artifactId>seed-webapp</artifactId>
	<packaging>war</packaging>
	<name>Seed Web-Application</name>
	<description>Seed Web-Application module.</description>

	<dependencies>
		<!-- javascript -->
		<dependency>
			<groupId>com.cujojs</groupId>
			<artifactId>seed-javascript</artifactId>
			<classifier>js</classifier>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>org.requirejs</groupId>
			<artifactId>r</artifactId>
			<classifier>js</classifier>
		</dependency>
		<dependency>
			<groupId>org.requirejs</groupId>
			<artifactId>require</artifactId>
			<classifier>js</classifier>
		</dependency>
		<!-- spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
		</dependency>
		<!-- logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-access</artifactId>
		</dependency>
		<!-- testing -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.codehaus.groovy</groupId>
			<artifactId>groovy-all</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.spockframework</groupId>
			<artifactId>spock-core</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.gebish</groupId>
			<artifactId>geb-spock</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-htmlunit-driver</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-ie-driver</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-firefox-driver</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-chrome-driver</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-safari-driver</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-support</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>

		<sourceDirectory>src/main/groovy</sourceDirectory>
		<testSourceDirectory>src/test/groovy</testSourceDirectory>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${java-version}</source>
					<target>${java-version}</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<executions>
					<execution>
						<phase>integration-test</phase>
						<goals>
							<goal>test</goal>
						</goals>
						<configuration>
							<includes>
								<include>**/*Spec.*</include>
							</includes>
							<systemPropertyVariables>
								<geb.build.baseUrl>http://google.com/ncr</geb.build.baseUrl>
								<geb.build.reportsDir>target/test-reports/geb</geb.build.reportsDir>
							</systemPropertyVariables>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>maven-jetty-plugin</artifactId>
				<configuration>
					<scanIntervalSeconds>10</scanIntervalSeconds>
					<stopKey>foo</stopKey>
					<stopPort>9999</stopPort>
					<contextPath>/</contextPath>
					<webApp>${project.build.directory}/${project.build.finalName}</webApp>
					<contextPath>/</contextPath>
				</configuration>
				<executions>
					<execution>
						<id>start-jetty</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>deploy-war</goal>
						</goals>
						<configuration>
							<scanIntervalSeconds>0</scanIntervalSeconds>
							<daemon>true</daemon>
						</configuration>
					</execution>
					<execution>
						<id>stop-jetty</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.gmaven</groupId>
				<artifactId>gmaven-plugin</artifactId>
				<configuration>
					<providerSelection>1.8</providerSelection>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>testCompile</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>org.codehaus.gmaven.runtime</groupId>
						<artifactId>gmaven-runtime-1.8</artifactId>
						<version>1.4</version>
						<exclusions>
							<exclusion>
								<groupId>org.codehaus.groovy</groupId>
								<artifactId>groovy-all</artifactId>
							</exclusion>
						</exclusions>
					</dependency>
					<dependency>
						<groupId>org.codehaus.groovy</groupId>
						<artifactId>groovy-all</artifactId>
						<version>1.8.6</version>
					</dependency>
					<dependency>
						<groupId>org.spockframework</groupId>
						<artifactId>spock-core</artifactId>
						<version>0.7-groovy-1.8</version>
						<exclusions>
							<exclusion>
								<groupId>org.codehaus.groovy</groupId>
								<artifactId>groovy-all</artifactId>
							</exclusion>
						</exclusions>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<id>copyApp</id>
						<phase>initialize</phase>
						<configuration>
							<target name="copyApp">
								<copy todir="${project.build.directory}/requirejs-build/static/app">
									<fileset dir="${basedir}/src/main/webapp/static/app" />
								</copy>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
					<execution>
						<id>moveLibs</id>
						<phase>generate-sources</phase>
						<configuration>
							<target name="moveLibs">
								<copy todir="${project.build.directory}/requirejs-build/static/lib">
									<fileset
										dir="${project.build.directory}/requirejs-build/tmp/META-INF/resources" />
								</copy>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
					<execution>
						<id>copyMinFile</id>
						<phase>prepare-package</phase>
						<configuration>
							<target name="copyMinFile">
								<copy
									file="${project.build.directory}/requirejs-build/static/app/main.min.js"
									todir="${project.build.directory}/m2e-wtp/web-resources/static/app" />
								<copy
									file="${project.build.directory}/requirejs-build/static/app/main.min.js"
									todir="${project.build.directory}/${project.build.finalName}/static/app" />
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>unpackJavascript</id>
						<phase>initialize</phase>
						<goals>
							<goal>unpack-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/requirejs-build/tmp</outputDirectory>
							<includeClassifiers>js</includeClassifiers>
							<type>jar</type>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.github.mcheely</groupId>
				<artifactId>requirejs-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>optimizeJavascript</id>
						<phase>process-sources</phase>
						<goals>
							<goal>optimize</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<!-- optional path to a nodejs executable -->
					<nodeExecutable></nodeExecutable>
					<!-- path to optimizer json config file -->
					<configFile>
						${project.build.directory}/requirejs-build/static/app/build.js
					</configFile>
					<!-- optional path to optimizer executable -->
					<optimizerFile>
						${project.build.directory}/requirejs-build/static/lib/r/dist/r.js
					</optimizerFile>
					<!-- Whether or not to process configFile with maven filters. If you 
						use this option, some options in your configFile must resolve to absolute 
						paths (see below) -->
					<filterConfig>
						false
					</filterConfig>
					<!-- Skip requirejs optimization if true -->
					<skip>
						false
					</skip>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>